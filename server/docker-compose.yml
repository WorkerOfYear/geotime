version: '3.10'

networks:
  mynetwork:
    driver: bridge

services:
  redis_server:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - mynetwork
#
#  geotime:
#    build:
#      context: .
#    image: geotime
#    container_name: geotime
#    ports:
#      - "8080:8080"
#    command: uvicorn src.main:app --host 0.0.0.0 --port 8080
#    restart: always
#    networks:
#      - mynetwork

#  video:
#    build:
#      context: .
#    image: geotime
#    container_name: video
#    ports:
#      - "8082:8082"
#    command: uvicorn src_video.main:app --host 0.0.0.0 --port 8082
#    restart: always
#    depends_on:
#      - mypostgres
#    networks:
#      - mynetwork
  
#  websocket:
#    build:
#      context: .
#    image: geotime
#    container_name: websocket
#    ports:
#      - "8081:8081"
#    command: uvicorn src_websockets.main:app --host 0.0.0.0 --port 8081
#    restart: always
#    depends_on:
#      - mypostgres
#    networks:
#      - mynetwork

#  celery_worker:
#    build:
#      context: .
#    image: geotime
#    container_name: celery_worker
#    command: celery -A src.tasks.tasks worker --concurrency=4 --loglevel=info --pool=threads
#    environment:
#      - REDIS_HOST=redis_server
#    restart: always
#    networks:
#      - mynetwork


  wits_worker:
    build:
      context: .
    image: geotime
    container_name: worker_wits
    command: python worker_wits.py
    environment:
      - REDIS_HOST=redis_server
    restart: always
    networks:
      - mynetwork

  report_worker:
    build:
      context: .
    image: geotime
    container_name: report_worker
    command: python worker_report.py
    environment:
      - REDIS_HOST=redis_server
    restart: always
    depends_on:
      - mypostgres
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3.10.7-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    networks:
      - mynetwork

  mypostgres:
    image: postgres
    container_name: mypostgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
    restart: always
    networks:
      - mynetwork
